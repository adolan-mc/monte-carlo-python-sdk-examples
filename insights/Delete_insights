import csv
from operator import contains
from os import listdir
from os.path import isfile, join

#add values here that you want to remove from the domains
VALUES_TO_KEEP = ["pdil", "pdil_prod", "PDIL", "PDIL_PROD", "pdil_sat_01", "PDIL_SAT_01", "PDIL_SAT_02", "pdil_sat_02" ]

def get_untransformed_files():
    files = []
    for f in listdir("."):
        if not "_NEW" in f and not "_REMOVED" in f and f.endswith(".csv"):
            files.append(f)

    return files

def filter_rows(csv_filename):
    keep_rows = []
    discard_rows = []
    headers = []
    with open(csv_filename, 'r' ) as csv_file:
        spreadsheet = csv.DictReader(csv_file)

        headers = spreadsheet.fieldnames
#change domains to the column you want to remove rows from
        for row in spreadsheet:
            for value in VALUES_TO_KEEP:
                if value.lower() in row["DOMAINS"].lower():
                    keep_rows.append(row)
                    break
            else:
                discard_rows.append(row)

    return keep_rows, discard_rows, headers

if __name__ == "__main__":
    csv_files_in_directory = get_untransformed_files()

    for csv_file in csv_files_in_directory:
        keep_rows, discard_rows, headers = filter_rows(csv_file)
        filename = csv_file[:len(csv_file) - 4]

        with open(f'{filename}_NEW.csv', 'w', newline = '') as new_file:   
            csv_writer = csv.DictWriter(new_file, headers)
            csv_writer.writeheader()
            csv_writer.writerows(keep_rows)

        with open(f'{filename}_REMOVED.csv', 'w', newline = '') as new_file:   
            csv_writer = csv.DictWriter(new_file, headers)
            csv_writer.writeheader()
            csv_writer.writerows(discard_rows)



